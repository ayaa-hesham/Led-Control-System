
LedControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009f6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000e4c  00000000  00000000  00000a4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000009b4  00000000  00000000  00001898  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <main>
  64:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_Set_Port_direction>:
#include "macros.h"



u8 DIO_Set_Port_direction(u8 Port_Num,u8 Direction)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_Set_Port_direction+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_Set_Port_direction+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	8a 83       	std	Y+2, r24	; 0x02
  7c:	6b 83       	std	Y+3, r22	; 0x03
    u8 x=2;
  7e:	82 e0       	ldi	r24, 0x02	; 2
  80:	89 83       	std	Y+1, r24	; 0x01
    if ((Port_Num>PortD_Num))
  82:	8a 81       	ldd	r24, Y+2	; 0x02
  84:	84 30       	cpi	r24, 0x04	; 4
  86:	10 f0       	brcs	.+4      	; 0x8c <DIO_Set_Port_direction+0x20>
    {
        x=0;
  88:	19 82       	std	Y+1, r1	; 0x01
  8a:	34 c0       	rjmp	.+104    	; 0xf4 <DIO_Set_Port_direction+0x88>
    }
    else 
    {
        x=1;
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	89 83       	std	Y+1, r24	; 0x01
        switch (Port_Num)
  90:	8a 81       	ldd	r24, Y+2	; 0x02
  92:	28 2f       	mov	r18, r24
  94:	30 e0       	ldi	r19, 0x00	; 0
  96:	3d 83       	std	Y+5, r19	; 0x05
  98:	2c 83       	std	Y+4, r18	; 0x04
  9a:	8c 81       	ldd	r24, Y+4	; 0x04
  9c:	9d 81       	ldd	r25, Y+5	; 0x05
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	91 05       	cpc	r25, r1
  a2:	d1 f0       	breq	.+52     	; 0xd8 <DIO_Set_Port_direction+0x6c>
  a4:	2c 81       	ldd	r18, Y+4	; 0x04
  a6:	3d 81       	ldd	r19, Y+5	; 0x05
  a8:	22 30       	cpi	r18, 0x02	; 2
  aa:	31 05       	cpc	r19, r1
  ac:	2c f4       	brge	.+10     	; 0xb8 <DIO_Set_Port_direction+0x4c>
  ae:	8c 81       	ldd	r24, Y+4	; 0x04
  b0:	9d 81       	ldd	r25, Y+5	; 0x05
  b2:	00 97       	sbiw	r24, 0x00	; 0
  b4:	61 f0       	breq	.+24     	; 0xce <DIO_Set_Port_direction+0x62>
  b6:	1e c0       	rjmp	.+60     	; 0xf4 <DIO_Set_Port_direction+0x88>
  b8:	2c 81       	ldd	r18, Y+4	; 0x04
  ba:	3d 81       	ldd	r19, Y+5	; 0x05
  bc:	22 30       	cpi	r18, 0x02	; 2
  be:	31 05       	cpc	r19, r1
  c0:	81 f0       	breq	.+32     	; 0xe2 <DIO_Set_Port_direction+0x76>
  c2:	8c 81       	ldd	r24, Y+4	; 0x04
  c4:	9d 81       	ldd	r25, Y+5	; 0x05
  c6:	83 30       	cpi	r24, 0x03	; 3
  c8:	91 05       	cpc	r25, r1
  ca:	81 f0       	breq	.+32     	; 0xec <DIO_Set_Port_direction+0x80>
  cc:	13 c0       	rjmp	.+38     	; 0xf4 <DIO_Set_Port_direction+0x88>
        {
            case PortA_Num:
                DDRA=Direction ;
  ce:	ea e3       	ldi	r30, 0x3A	; 58
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	8b 81       	ldd	r24, Y+3	; 0x03
  d4:	80 83       	st	Z, r24
  d6:	0e c0       	rjmp	.+28     	; 0xf4 <DIO_Set_Port_direction+0x88>
                break;
            case PortB_Num:
                DDRB=Direction ;
  d8:	e7 e3       	ldi	r30, 0x37	; 55
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	8b 81       	ldd	r24, Y+3	; 0x03
  de:	80 83       	st	Z, r24
  e0:	09 c0       	rjmp	.+18     	; 0xf4 <DIO_Set_Port_direction+0x88>
                break;
            case PortC_Num:
                DDRC=Direction ;
  e2:	e4 e3       	ldi	r30, 0x34	; 52
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	8b 81       	ldd	r24, Y+3	; 0x03
  e8:	80 83       	st	Z, r24
  ea:	04 c0       	rjmp	.+8      	; 0xf4 <DIO_Set_Port_direction+0x88>
                break;
            case PortD_Num:
                DDRD=Direction ;
  ec:	e1 e3       	ldi	r30, 0x31	; 49
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	8b 81       	ldd	r24, Y+3	; 0x03
  f2:	80 83       	st	Z, r24
                break;
            default:
                break;
        };
    }
    return x;
  f4:	89 81       	ldd	r24, Y+1	; 0x01
}
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	0f 90       	pop	r0
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	cf 91       	pop	r28
 102:	df 91       	pop	r29
 104:	08 95       	ret

00000106 <DIO_Set_Pin_direction>:


u8 DIO_Set_Pin_direction(u8 Port_Num,u8 PIN_NUM,u8 Direction)
{
 106:	df 93       	push	r29
 108:	cf 93       	push	r28
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	2e 97       	sbiw	r28, 0x0e	; 14
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	f8 94       	cli
 114:	de bf       	out	0x3e, r29	; 62
 116:	0f be       	out	0x3f, r0	; 63
 118:	cd bf       	out	0x3d, r28	; 61
 11a:	8a 83       	std	Y+2, r24	; 0x02
 11c:	6b 83       	std	Y+3, r22	; 0x03
 11e:	4c 83       	std	Y+4, r20	; 0x04
    u8 x=2;
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	89 83       	std	Y+1, r24	; 0x01
    if (PIN_NUM<8)
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	88 30       	cpi	r24, 0x08	; 8
 128:	08 f0       	brcs	.+2      	; 0x12c <DIO_Set_Pin_direction+0x26>
 12a:	07 c1       	rjmp	.+526    	; 0x33a <DIO_Set_Pin_direction+0x234>
    {
        if (Direction <= 1)
 12c:	8c 81       	ldd	r24, Y+4	; 0x04
 12e:	82 30       	cpi	r24, 0x02	; 2
 130:	08 f0       	brcs	.+2      	; 0x134 <DIO_Set_Pin_direction+0x2e>
 132:	00 c1       	rjmp	.+512    	; 0x334 <DIO_Set_Pin_direction+0x22e>
        {
            switch (Port_Num)
 134:	8a 81       	ldd	r24, Y+2	; 0x02
 136:	28 2f       	mov	r18, r24
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	3e 87       	std	Y+14, r19	; 0x0e
 13c:	2d 87       	std	Y+13, r18	; 0x0d
 13e:	8d 85       	ldd	r24, Y+13	; 0x0d
 140:	9e 85       	ldd	r25, Y+14	; 0x0e
 142:	81 30       	cpi	r24, 0x01	; 1
 144:	91 05       	cpc	r25, r1
 146:	09 f4       	brne	.+2      	; 0x14a <DIO_Set_Pin_direction+0x44>
 148:	4f c0       	rjmp	.+158    	; 0x1e8 <DIO_Set_Pin_direction+0xe2>
 14a:	2d 85       	ldd	r18, Y+13	; 0x0d
 14c:	3e 85       	ldd	r19, Y+14	; 0x0e
 14e:	22 30       	cpi	r18, 0x02	; 2
 150:	31 05       	cpc	r19, r1
 152:	2c f4       	brge	.+10     	; 0x15e <DIO_Set_Pin_direction+0x58>
 154:	8d 85       	ldd	r24, Y+13	; 0x0d
 156:	9e 85       	ldd	r25, Y+14	; 0x0e
 158:	00 97       	sbiw	r24, 0x00	; 0
 15a:	71 f0       	breq	.+28     	; 0x178 <DIO_Set_Pin_direction+0x72>
 15c:	eb c0       	rjmp	.+470    	; 0x334 <DIO_Set_Pin_direction+0x22e>
 15e:	2d 85       	ldd	r18, Y+13	; 0x0d
 160:	3e 85       	ldd	r19, Y+14	; 0x0e
 162:	22 30       	cpi	r18, 0x02	; 2
 164:	31 05       	cpc	r19, r1
 166:	09 f4       	brne	.+2      	; 0x16a <DIO_Set_Pin_direction+0x64>
 168:	77 c0       	rjmp	.+238    	; 0x258 <DIO_Set_Pin_direction+0x152>
 16a:	8d 85       	ldd	r24, Y+13	; 0x0d
 16c:	9e 85       	ldd	r25, Y+14	; 0x0e
 16e:	83 30       	cpi	r24, 0x03	; 3
 170:	91 05       	cpc	r25, r1
 172:	09 f4       	brne	.+2      	; 0x176 <DIO_Set_Pin_direction+0x70>
 174:	a9 c0       	rjmp	.+338    	; 0x2c8 <DIO_Set_Pin_direction+0x1c2>
 176:	de c0       	rjmp	.+444    	; 0x334 <DIO_Set_Pin_direction+0x22e>
            {
            case PortA_Num:
                switch (Direction)
 178:	8c 81       	ldd	r24, Y+4	; 0x04
 17a:	28 2f       	mov	r18, r24
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	3c 87       	std	Y+12, r19	; 0x0c
 180:	2b 87       	std	Y+11, r18	; 0x0b
 182:	8b 85       	ldd	r24, Y+11	; 0x0b
 184:	9c 85       	ldd	r25, Y+12	; 0x0c
 186:	00 97       	sbiw	r24, 0x00	; 0
 188:	d1 f0       	breq	.+52     	; 0x1be <DIO_Set_Pin_direction+0xb8>
 18a:	2b 85       	ldd	r18, Y+11	; 0x0b
 18c:	3c 85       	ldd	r19, Y+12	; 0x0c
 18e:	21 30       	cpi	r18, 0x01	; 1
 190:	31 05       	cpc	r19, r1
 192:	09 f0       	breq	.+2      	; 0x196 <DIO_Set_Pin_direction+0x90>
 194:	cf c0       	rjmp	.+414    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                {
                case output:
                    Set_Bit(DDRA,PIN_NUM);
 196:	aa e3       	ldi	r26, 0x3A	; 58
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	ea e3       	ldi	r30, 0x3A	; 58
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	48 2f       	mov	r20, r24
 1a2:	8b 81       	ldd	r24, Y+3	; 0x03
 1a4:	28 2f       	mov	r18, r24
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 2e       	mov	r0, r18
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_Set_Pin_direction+0xae>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_Set_Pin_direction+0xaa>
 1b8:	84 2b       	or	r24, r20
 1ba:	8c 93       	st	X, r24
 1bc:	bb c0       	rjmp	.+374    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                case input:
                    Clear_Bit(DDRA,PIN_NUM);
 1be:	aa e3       	ldi	r26, 0x3A	; 58
 1c0:	b0 e0       	ldi	r27, 0x00	; 0
 1c2:	ea e3       	ldi	r30, 0x3A	; 58
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	48 2f       	mov	r20, r24
 1ca:	8b 81       	ldd	r24, Y+3	; 0x03
 1cc:	28 2f       	mov	r18, r24
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 2e       	mov	r0, r18
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_Set_Pin_direction+0xd6>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	0a 94       	dec	r0
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_Set_Pin_direction+0xd2>
 1e0:	80 95       	com	r24
 1e2:	84 23       	and	r24, r20
 1e4:	8c 93       	st	X, r24
 1e6:	a6 c0       	rjmp	.+332    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                }
            break;
            case PortB_Num:
                switch (Direction)
 1e8:	8c 81       	ldd	r24, Y+4	; 0x04
 1ea:	28 2f       	mov	r18, r24
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	3a 87       	std	Y+10, r19	; 0x0a
 1f0:	29 87       	std	Y+9, r18	; 0x09
 1f2:	89 85       	ldd	r24, Y+9	; 0x09
 1f4:	9a 85       	ldd	r25, Y+10	; 0x0a
 1f6:	00 97       	sbiw	r24, 0x00	; 0
 1f8:	d1 f0       	breq	.+52     	; 0x22e <DIO_Set_Pin_direction+0x128>
 1fa:	29 85       	ldd	r18, Y+9	; 0x09
 1fc:	3a 85       	ldd	r19, Y+10	; 0x0a
 1fe:	21 30       	cpi	r18, 0x01	; 1
 200:	31 05       	cpc	r19, r1
 202:	09 f0       	breq	.+2      	; 0x206 <DIO_Set_Pin_direction+0x100>
 204:	97 c0       	rjmp	.+302    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                {
                case output:
                    Set_Bit(DDRB,PIN_NUM);
 206:	a7 e3       	ldi	r26, 0x37	; 55
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	e7 e3       	ldi	r30, 0x37	; 55
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	48 2f       	mov	r20, r24
 212:	8b 81       	ldd	r24, Y+3	; 0x03
 214:	28 2f       	mov	r18, r24
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 2e       	mov	r0, r18
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_Set_Pin_direction+0x11e>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	0a 94       	dec	r0
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_Set_Pin_direction+0x11a>
 228:	84 2b       	or	r24, r20
 22a:	8c 93       	st	X, r24
 22c:	83 c0       	rjmp	.+262    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                case input:
                    Clear_Bit(DDRB,PIN_NUM);
 22e:	a7 e3       	ldi	r26, 0x37	; 55
 230:	b0 e0       	ldi	r27, 0x00	; 0
 232:	e7 e3       	ldi	r30, 0x37	; 55
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	48 2f       	mov	r20, r24
 23a:	8b 81       	ldd	r24, Y+3	; 0x03
 23c:	28 2f       	mov	r18, r24
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	02 2e       	mov	r0, r18
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_Set_Pin_direction+0x146>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	0a 94       	dec	r0
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_Set_Pin_direction+0x142>
 250:	80 95       	com	r24
 252:	84 23       	and	r24, r20
 254:	8c 93       	st	X, r24
 256:	6e c0       	rjmp	.+220    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                }
            break;
            case PortC_Num:
                switch (Direction)
 258:	8c 81       	ldd	r24, Y+4	; 0x04
 25a:	28 2f       	mov	r18, r24
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	38 87       	std	Y+8, r19	; 0x08
 260:	2f 83       	std	Y+7, r18	; 0x07
 262:	8f 81       	ldd	r24, Y+7	; 0x07
 264:	98 85       	ldd	r25, Y+8	; 0x08
 266:	00 97       	sbiw	r24, 0x00	; 0
 268:	d1 f0       	breq	.+52     	; 0x29e <DIO_Set_Pin_direction+0x198>
 26a:	2f 81       	ldd	r18, Y+7	; 0x07
 26c:	38 85       	ldd	r19, Y+8	; 0x08
 26e:	21 30       	cpi	r18, 0x01	; 1
 270:	31 05       	cpc	r19, r1
 272:	09 f0       	breq	.+2      	; 0x276 <DIO_Set_Pin_direction+0x170>
 274:	5f c0       	rjmp	.+190    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                {
                case output:
                    Set_Bit(DDRC,PIN_NUM);
 276:	a4 e3       	ldi	r26, 0x34	; 52
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	e4 e3       	ldi	r30, 0x34	; 52
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	48 2f       	mov	r20, r24
 282:	8b 81       	ldd	r24, Y+3	; 0x03
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 2e       	mov	r0, r18
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_Set_Pin_direction+0x18e>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	0a 94       	dec	r0
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_Set_Pin_direction+0x18a>
 298:	84 2b       	or	r24, r20
 29a:	8c 93       	st	X, r24
 29c:	4b c0       	rjmp	.+150    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                case input:
                    Clear_Bit(DDRC,PIN_NUM);
 29e:	a4 e3       	ldi	r26, 0x34	; 52
 2a0:	b0 e0       	ldi	r27, 0x00	; 0
 2a2:	e4 e3       	ldi	r30, 0x34	; 52
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	48 2f       	mov	r20, r24
 2aa:	8b 81       	ldd	r24, Y+3	; 0x03
 2ac:	28 2f       	mov	r18, r24
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 2e       	mov	r0, r18
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_Set_Pin_direction+0x1b6>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	0a 94       	dec	r0
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_Set_Pin_direction+0x1b2>
 2c0:	80 95       	com	r24
 2c2:	84 23       	and	r24, r20
 2c4:	8c 93       	st	X, r24
 2c6:	36 c0       	rjmp	.+108    	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                }
            break;
            case PortD_Num:
                switch (Direction)
 2c8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ca:	28 2f       	mov	r18, r24
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	3e 83       	std	Y+6, r19	; 0x06
 2d0:	2d 83       	std	Y+5, r18	; 0x05
 2d2:	8d 81       	ldd	r24, Y+5	; 0x05
 2d4:	9e 81       	ldd	r25, Y+6	; 0x06
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	c9 f0       	breq	.+50     	; 0x30c <DIO_Set_Pin_direction+0x206>
 2da:	2d 81       	ldd	r18, Y+5	; 0x05
 2dc:	3e 81       	ldd	r19, Y+6	; 0x06
 2de:	21 30       	cpi	r18, 0x01	; 1
 2e0:	31 05       	cpc	r19, r1
 2e2:	41 f5       	brne	.+80     	; 0x334 <DIO_Set_Pin_direction+0x22e>
                {
                case output:
                    Set_Bit(DDRD,PIN_NUM);
 2e4:	a1 e3       	ldi	r26, 0x31	; 49
 2e6:	b0 e0       	ldi	r27, 0x00	; 0
 2e8:	e1 e3       	ldi	r30, 0x31	; 49
 2ea:	f0 e0       	ldi	r31, 0x00	; 0
 2ec:	80 81       	ld	r24, Z
 2ee:	48 2f       	mov	r20, r24
 2f0:	8b 81       	ldd	r24, Y+3	; 0x03
 2f2:	28 2f       	mov	r18, r24
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	02 2e       	mov	r0, r18
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_Set_Pin_direction+0x1fc>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	0a 94       	dec	r0
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_Set_Pin_direction+0x1f8>
 306:	84 2b       	or	r24, r20
 308:	8c 93       	st	X, r24
 30a:	14 c0       	rjmp	.+40     	; 0x334 <DIO_Set_Pin_direction+0x22e>
                    break;
                case input:
                    Clear_Bit(DDRD,PIN_NUM);
 30c:	a1 e3       	ldi	r26, 0x31	; 49
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	e1 e3       	ldi	r30, 0x31	; 49
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	80 81       	ld	r24, Z
 316:	48 2f       	mov	r20, r24
 318:	8b 81       	ldd	r24, Y+3	; 0x03
 31a:	28 2f       	mov	r18, r24
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	02 2e       	mov	r0, r18
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_Set_Pin_direction+0x224>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_Set_Pin_direction+0x220>
 32e:	80 95       	com	r24
 330:	84 23       	and	r24, r20
 332:	8c 93       	st	X, r24
            break;
            default:
                break;
            };
        }
        x=1;
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	89 83       	std	Y+1, r24	; 0x01
 338:	01 c0       	rjmp	.+2      	; 0x33c <DIO_Set_Pin_direction+0x236>
    }
    else
    {
        x=0;
 33a:	19 82       	std	Y+1, r1	; 0x01
    }
    return x;   
 33c:	89 81       	ldd	r24, Y+1	; 0x01
}
 33e:	2e 96       	adiw	r28, 0x0e	; 14
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	cf 91       	pop	r28
 34c:	df 91       	pop	r29
 34e:	08 95       	ret

00000350 <DIO_Set_Port_Value>:


u8 DIO_Set_Port_Value(u8 Port_Num,u8 Value)
{
 350:	df 93       	push	r29
 352:	cf 93       	push	r28
 354:	00 d0       	rcall	.+0      	; 0x356 <DIO_Set_Port_Value+0x6>
 356:	00 d0       	rcall	.+0      	; 0x358 <DIO_Set_Port_Value+0x8>
 358:	0f 92       	push	r0
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62
 35e:	8a 83       	std	Y+2, r24	; 0x02
 360:	6b 83       	std	Y+3, r22	; 0x03
    u8 x=2;
 362:	82 e0       	ldi	r24, 0x02	; 2
 364:	89 83       	std	Y+1, r24	; 0x01
    if (Port_Num>PortD_Num)
 366:	8a 81       	ldd	r24, Y+2	; 0x02
 368:	84 30       	cpi	r24, 0x04	; 4
 36a:	10 f0       	brcs	.+4      	; 0x370 <DIO_Set_Port_Value+0x20>
    {
        x=0;
 36c:	19 82       	std	Y+1, r1	; 0x01
 36e:	34 c0       	rjmp	.+104    	; 0x3d8 <DIO_Set_Port_Value+0x88>
    }
    else 
    {
        x=1;
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	89 83       	std	Y+1, r24	; 0x01
        switch (Port_Num)
 374:	8a 81       	ldd	r24, Y+2	; 0x02
 376:	28 2f       	mov	r18, r24
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	3d 83       	std	Y+5, r19	; 0x05
 37c:	2c 83       	std	Y+4, r18	; 0x04
 37e:	8c 81       	ldd	r24, Y+4	; 0x04
 380:	9d 81       	ldd	r25, Y+5	; 0x05
 382:	81 30       	cpi	r24, 0x01	; 1
 384:	91 05       	cpc	r25, r1
 386:	d1 f0       	breq	.+52     	; 0x3bc <DIO_Set_Port_Value+0x6c>
 388:	2c 81       	ldd	r18, Y+4	; 0x04
 38a:	3d 81       	ldd	r19, Y+5	; 0x05
 38c:	22 30       	cpi	r18, 0x02	; 2
 38e:	31 05       	cpc	r19, r1
 390:	2c f4       	brge	.+10     	; 0x39c <DIO_Set_Port_Value+0x4c>
 392:	8c 81       	ldd	r24, Y+4	; 0x04
 394:	9d 81       	ldd	r25, Y+5	; 0x05
 396:	00 97       	sbiw	r24, 0x00	; 0
 398:	61 f0       	breq	.+24     	; 0x3b2 <DIO_Set_Port_Value+0x62>
 39a:	1e c0       	rjmp	.+60     	; 0x3d8 <DIO_Set_Port_Value+0x88>
 39c:	2c 81       	ldd	r18, Y+4	; 0x04
 39e:	3d 81       	ldd	r19, Y+5	; 0x05
 3a0:	22 30       	cpi	r18, 0x02	; 2
 3a2:	31 05       	cpc	r19, r1
 3a4:	81 f0       	breq	.+32     	; 0x3c6 <DIO_Set_Port_Value+0x76>
 3a6:	8c 81       	ldd	r24, Y+4	; 0x04
 3a8:	9d 81       	ldd	r25, Y+5	; 0x05
 3aa:	83 30       	cpi	r24, 0x03	; 3
 3ac:	91 05       	cpc	r25, r1
 3ae:	81 f0       	breq	.+32     	; 0x3d0 <DIO_Set_Port_Value+0x80>
 3b0:	13 c0       	rjmp	.+38     	; 0x3d8 <DIO_Set_Port_Value+0x88>
        {
            case PortA_Num:
                PORTA=Value;
 3b2:	eb e3       	ldi	r30, 0x3B	; 59
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	8b 81       	ldd	r24, Y+3	; 0x03
 3b8:	80 83       	st	Z, r24
 3ba:	0e c0       	rjmp	.+28     	; 0x3d8 <DIO_Set_Port_Value+0x88>
                break;
            case PortB_Num:
                PORTB=Value;
 3bc:	e8 e3       	ldi	r30, 0x38	; 56
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	8b 81       	ldd	r24, Y+3	; 0x03
 3c2:	80 83       	st	Z, r24
 3c4:	09 c0       	rjmp	.+18     	; 0x3d8 <DIO_Set_Port_Value+0x88>
                break;
            case PortC_Num:
                PORTC=Value;
 3c6:	e5 e3       	ldi	r30, 0x35	; 53
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	8b 81       	ldd	r24, Y+3	; 0x03
 3cc:	80 83       	st	Z, r24
 3ce:	04 c0       	rjmp	.+8      	; 0x3d8 <DIO_Set_Port_Value+0x88>
                break;
            case PortD_Num:
                PORTD=Value;
 3d0:	e2 e3       	ldi	r30, 0x32	; 50
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	8b 81       	ldd	r24, Y+3	; 0x03
 3d6:	80 83       	st	Z, r24
                break;
        };
    }
    return x;
 3d8:	89 81       	ldd	r24, Y+1	; 0x01
}
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	cf 91       	pop	r28
 3e6:	df 91       	pop	r29
 3e8:	08 95       	ret

000003ea <DIO_Set_Pin_Value>:


u8 DIO_Set_Pin_Value(u8 Port_Num,u8 PIN_NUM,u8 Value)
{
 3ea:	df 93       	push	r29
 3ec:	cf 93       	push	r28
 3ee:	cd b7       	in	r28, 0x3d	; 61
 3f0:	de b7       	in	r29, 0x3e	; 62
 3f2:	2e 97       	sbiw	r28, 0x0e	; 14
 3f4:	0f b6       	in	r0, 0x3f	; 63
 3f6:	f8 94       	cli
 3f8:	de bf       	out	0x3e, r29	; 62
 3fa:	0f be       	out	0x3f, r0	; 63
 3fc:	cd bf       	out	0x3d, r28	; 61
 3fe:	8a 83       	std	Y+2, r24	; 0x02
 400:	6b 83       	std	Y+3, r22	; 0x03
 402:	4c 83       	std	Y+4, r20	; 0x04
    u8 x=2;
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	89 83       	std	Y+1, r24	; 0x01
    if (PIN_NUM<8)
 408:	8b 81       	ldd	r24, Y+3	; 0x03
 40a:	88 30       	cpi	r24, 0x08	; 8
 40c:	08 f0       	brcs	.+2      	; 0x410 <DIO_Set_Pin_Value+0x26>
 40e:	07 c1       	rjmp	.+526    	; 0x61e <DIO_Set_Pin_Value+0x234>
    {
        if (Value<=1)
 410:	8c 81       	ldd	r24, Y+4	; 0x04
 412:	82 30       	cpi	r24, 0x02	; 2
 414:	08 f0       	brcs	.+2      	; 0x418 <DIO_Set_Pin_Value+0x2e>
 416:	00 c1       	rjmp	.+512    	; 0x618 <DIO_Set_Pin_Value+0x22e>
        {
            switch (Port_Num)
 418:	8a 81       	ldd	r24, Y+2	; 0x02
 41a:	28 2f       	mov	r18, r24
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	3e 87       	std	Y+14, r19	; 0x0e
 420:	2d 87       	std	Y+13, r18	; 0x0d
 422:	8d 85       	ldd	r24, Y+13	; 0x0d
 424:	9e 85       	ldd	r25, Y+14	; 0x0e
 426:	81 30       	cpi	r24, 0x01	; 1
 428:	91 05       	cpc	r25, r1
 42a:	09 f4       	brne	.+2      	; 0x42e <DIO_Set_Pin_Value+0x44>
 42c:	4f c0       	rjmp	.+158    	; 0x4cc <DIO_Set_Pin_Value+0xe2>
 42e:	2d 85       	ldd	r18, Y+13	; 0x0d
 430:	3e 85       	ldd	r19, Y+14	; 0x0e
 432:	22 30       	cpi	r18, 0x02	; 2
 434:	31 05       	cpc	r19, r1
 436:	2c f4       	brge	.+10     	; 0x442 <DIO_Set_Pin_Value+0x58>
 438:	8d 85       	ldd	r24, Y+13	; 0x0d
 43a:	9e 85       	ldd	r25, Y+14	; 0x0e
 43c:	00 97       	sbiw	r24, 0x00	; 0
 43e:	71 f0       	breq	.+28     	; 0x45c <DIO_Set_Pin_Value+0x72>
 440:	eb c0       	rjmp	.+470    	; 0x618 <DIO_Set_Pin_Value+0x22e>
 442:	2d 85       	ldd	r18, Y+13	; 0x0d
 444:	3e 85       	ldd	r19, Y+14	; 0x0e
 446:	22 30       	cpi	r18, 0x02	; 2
 448:	31 05       	cpc	r19, r1
 44a:	09 f4       	brne	.+2      	; 0x44e <DIO_Set_Pin_Value+0x64>
 44c:	77 c0       	rjmp	.+238    	; 0x53c <DIO_Set_Pin_Value+0x152>
 44e:	8d 85       	ldd	r24, Y+13	; 0x0d
 450:	9e 85       	ldd	r25, Y+14	; 0x0e
 452:	83 30       	cpi	r24, 0x03	; 3
 454:	91 05       	cpc	r25, r1
 456:	09 f4       	brne	.+2      	; 0x45a <DIO_Set_Pin_Value+0x70>
 458:	a9 c0       	rjmp	.+338    	; 0x5ac <DIO_Set_Pin_Value+0x1c2>
 45a:	de c0       	rjmp	.+444    	; 0x618 <DIO_Set_Pin_Value+0x22e>
            {
            case PortA_Num:
                switch (Value)
 45c:	8c 81       	ldd	r24, Y+4	; 0x04
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	3c 87       	std	Y+12, r19	; 0x0c
 464:	2b 87       	std	Y+11, r18	; 0x0b
 466:	8b 85       	ldd	r24, Y+11	; 0x0b
 468:	9c 85       	ldd	r25, Y+12	; 0x0c
 46a:	00 97       	sbiw	r24, 0x00	; 0
 46c:	d1 f0       	breq	.+52     	; 0x4a2 <DIO_Set_Pin_Value+0xb8>
 46e:	2b 85       	ldd	r18, Y+11	; 0x0b
 470:	3c 85       	ldd	r19, Y+12	; 0x0c
 472:	21 30       	cpi	r18, 0x01	; 1
 474:	31 05       	cpc	r19, r1
 476:	09 f0       	breq	.+2      	; 0x47a <DIO_Set_Pin_Value+0x90>
 478:	cf c0       	rjmp	.+414    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                {
                case output:
                    Set_Bit(PORTA,PIN_NUM);
 47a:	ab e3       	ldi	r26, 0x3B	; 59
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	eb e3       	ldi	r30, 0x3B	; 59
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	80 81       	ld	r24, Z
 484:	48 2f       	mov	r20, r24
 486:	8b 81       	ldd	r24, Y+3	; 0x03
 488:	28 2f       	mov	r18, r24
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	02 2e       	mov	r0, r18
 492:	02 c0       	rjmp	.+4      	; 0x498 <DIO_Set_Pin_Value+0xae>
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	0a 94       	dec	r0
 49a:	e2 f7       	brpl	.-8      	; 0x494 <DIO_Set_Pin_Value+0xaa>
 49c:	84 2b       	or	r24, r20
 49e:	8c 93       	st	X, r24
 4a0:	bb c0       	rjmp	.+374    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                case input:
                    Clear_Bit(PORTA,PIN_NUM);
 4a2:	ab e3       	ldi	r26, 0x3B	; 59
 4a4:	b0 e0       	ldi	r27, 0x00	; 0
 4a6:	eb e3       	ldi	r30, 0x3B	; 59
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	48 2f       	mov	r20, r24
 4ae:	8b 81       	ldd	r24, Y+3	; 0x03
 4b0:	28 2f       	mov	r18, r24
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	02 2e       	mov	r0, r18
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <DIO_Set_Pin_Value+0xd6>
 4bc:	88 0f       	add	r24, r24
 4be:	99 1f       	adc	r25, r25
 4c0:	0a 94       	dec	r0
 4c2:	e2 f7       	brpl	.-8      	; 0x4bc <DIO_Set_Pin_Value+0xd2>
 4c4:	80 95       	com	r24
 4c6:	84 23       	and	r24, r20
 4c8:	8c 93       	st	X, r24
 4ca:	a6 c0       	rjmp	.+332    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                }
            break;
            case PortB_Num:
                switch (Value)
 4cc:	8c 81       	ldd	r24, Y+4	; 0x04
 4ce:	28 2f       	mov	r18, r24
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	3a 87       	std	Y+10, r19	; 0x0a
 4d4:	29 87       	std	Y+9, r18	; 0x09
 4d6:	89 85       	ldd	r24, Y+9	; 0x09
 4d8:	9a 85       	ldd	r25, Y+10	; 0x0a
 4da:	00 97       	sbiw	r24, 0x00	; 0
 4dc:	d1 f0       	breq	.+52     	; 0x512 <DIO_Set_Pin_Value+0x128>
 4de:	29 85       	ldd	r18, Y+9	; 0x09
 4e0:	3a 85       	ldd	r19, Y+10	; 0x0a
 4e2:	21 30       	cpi	r18, 0x01	; 1
 4e4:	31 05       	cpc	r19, r1
 4e6:	09 f0       	breq	.+2      	; 0x4ea <DIO_Set_Pin_Value+0x100>
 4e8:	97 c0       	rjmp	.+302    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                {
                case output:
                    Set_Bit(PORTB,PIN_NUM);
 4ea:	a8 e3       	ldi	r26, 0x38	; 56
 4ec:	b0 e0       	ldi	r27, 0x00	; 0
 4ee:	e8 e3       	ldi	r30, 0x38	; 56
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	80 81       	ld	r24, Z
 4f4:	48 2f       	mov	r20, r24
 4f6:	8b 81       	ldd	r24, Y+3	; 0x03
 4f8:	28 2f       	mov	r18, r24
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	02 2e       	mov	r0, r18
 502:	02 c0       	rjmp	.+4      	; 0x508 <DIO_Set_Pin_Value+0x11e>
 504:	88 0f       	add	r24, r24
 506:	99 1f       	adc	r25, r25
 508:	0a 94       	dec	r0
 50a:	e2 f7       	brpl	.-8      	; 0x504 <DIO_Set_Pin_Value+0x11a>
 50c:	84 2b       	or	r24, r20
 50e:	8c 93       	st	X, r24
 510:	83 c0       	rjmp	.+262    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                case input:
                    Clear_Bit(PORTB,PIN_NUM);
 512:	a8 e3       	ldi	r26, 0x38	; 56
 514:	b0 e0       	ldi	r27, 0x00	; 0
 516:	e8 e3       	ldi	r30, 0x38	; 56
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	80 81       	ld	r24, Z
 51c:	48 2f       	mov	r20, r24
 51e:	8b 81       	ldd	r24, Y+3	; 0x03
 520:	28 2f       	mov	r18, r24
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	02 2e       	mov	r0, r18
 52a:	02 c0       	rjmp	.+4      	; 0x530 <DIO_Set_Pin_Value+0x146>
 52c:	88 0f       	add	r24, r24
 52e:	99 1f       	adc	r25, r25
 530:	0a 94       	dec	r0
 532:	e2 f7       	brpl	.-8      	; 0x52c <DIO_Set_Pin_Value+0x142>
 534:	80 95       	com	r24
 536:	84 23       	and	r24, r20
 538:	8c 93       	st	X, r24
 53a:	6e c0       	rjmp	.+220    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                }
            break;
            case PortC_Num:
                switch (Value)
 53c:	8c 81       	ldd	r24, Y+4	; 0x04
 53e:	28 2f       	mov	r18, r24
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	38 87       	std	Y+8, r19	; 0x08
 544:	2f 83       	std	Y+7, r18	; 0x07
 546:	8f 81       	ldd	r24, Y+7	; 0x07
 548:	98 85       	ldd	r25, Y+8	; 0x08
 54a:	00 97       	sbiw	r24, 0x00	; 0
 54c:	d1 f0       	breq	.+52     	; 0x582 <DIO_Set_Pin_Value+0x198>
 54e:	2f 81       	ldd	r18, Y+7	; 0x07
 550:	38 85       	ldd	r19, Y+8	; 0x08
 552:	21 30       	cpi	r18, 0x01	; 1
 554:	31 05       	cpc	r19, r1
 556:	09 f0       	breq	.+2      	; 0x55a <DIO_Set_Pin_Value+0x170>
 558:	5f c0       	rjmp	.+190    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                {
                case output:
                    Set_Bit(PORTC,PIN_NUM);
 55a:	a5 e3       	ldi	r26, 0x35	; 53
 55c:	b0 e0       	ldi	r27, 0x00	; 0
 55e:	e5 e3       	ldi	r30, 0x35	; 53
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	80 81       	ld	r24, Z
 564:	48 2f       	mov	r20, r24
 566:	8b 81       	ldd	r24, Y+3	; 0x03
 568:	28 2f       	mov	r18, r24
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	02 2e       	mov	r0, r18
 572:	02 c0       	rjmp	.+4      	; 0x578 <DIO_Set_Pin_Value+0x18e>
 574:	88 0f       	add	r24, r24
 576:	99 1f       	adc	r25, r25
 578:	0a 94       	dec	r0
 57a:	e2 f7       	brpl	.-8      	; 0x574 <DIO_Set_Pin_Value+0x18a>
 57c:	84 2b       	or	r24, r20
 57e:	8c 93       	st	X, r24
 580:	4b c0       	rjmp	.+150    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                case input:
                    Clear_Bit(PORTC,PIN_NUM);
 582:	a5 e3       	ldi	r26, 0x35	; 53
 584:	b0 e0       	ldi	r27, 0x00	; 0
 586:	e5 e3       	ldi	r30, 0x35	; 53
 588:	f0 e0       	ldi	r31, 0x00	; 0
 58a:	80 81       	ld	r24, Z
 58c:	48 2f       	mov	r20, r24
 58e:	8b 81       	ldd	r24, Y+3	; 0x03
 590:	28 2f       	mov	r18, r24
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	02 2e       	mov	r0, r18
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <DIO_Set_Pin_Value+0x1b6>
 59c:	88 0f       	add	r24, r24
 59e:	99 1f       	adc	r25, r25
 5a0:	0a 94       	dec	r0
 5a2:	e2 f7       	brpl	.-8      	; 0x59c <DIO_Set_Pin_Value+0x1b2>
 5a4:	80 95       	com	r24
 5a6:	84 23       	and	r24, r20
 5a8:	8c 93       	st	X, r24
 5aa:	36 c0       	rjmp	.+108    	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                }
            break;
            case PortD_Num:
                switch (Value)
 5ac:	8c 81       	ldd	r24, Y+4	; 0x04
 5ae:	28 2f       	mov	r18, r24
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	3e 83       	std	Y+6, r19	; 0x06
 5b4:	2d 83       	std	Y+5, r18	; 0x05
 5b6:	8d 81       	ldd	r24, Y+5	; 0x05
 5b8:	9e 81       	ldd	r25, Y+6	; 0x06
 5ba:	00 97       	sbiw	r24, 0x00	; 0
 5bc:	c9 f0       	breq	.+50     	; 0x5f0 <DIO_Set_Pin_Value+0x206>
 5be:	2d 81       	ldd	r18, Y+5	; 0x05
 5c0:	3e 81       	ldd	r19, Y+6	; 0x06
 5c2:	21 30       	cpi	r18, 0x01	; 1
 5c4:	31 05       	cpc	r19, r1
 5c6:	41 f5       	brne	.+80     	; 0x618 <DIO_Set_Pin_Value+0x22e>
                {
                case output:
                    Set_Bit(PORTD,PIN_NUM);
 5c8:	a2 e3       	ldi	r26, 0x32	; 50
 5ca:	b0 e0       	ldi	r27, 0x00	; 0
 5cc:	e2 e3       	ldi	r30, 0x32	; 50
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	80 81       	ld	r24, Z
 5d2:	48 2f       	mov	r20, r24
 5d4:	8b 81       	ldd	r24, Y+3	; 0x03
 5d6:	28 2f       	mov	r18, r24
 5d8:	30 e0       	ldi	r19, 0x00	; 0
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	02 2e       	mov	r0, r18
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <DIO_Set_Pin_Value+0x1fc>
 5e2:	88 0f       	add	r24, r24
 5e4:	99 1f       	adc	r25, r25
 5e6:	0a 94       	dec	r0
 5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <DIO_Set_Pin_Value+0x1f8>
 5ea:	84 2b       	or	r24, r20
 5ec:	8c 93       	st	X, r24
 5ee:	14 c0       	rjmp	.+40     	; 0x618 <DIO_Set_Pin_Value+0x22e>
                    break;
                case input:
                    Clear_Bit(PORTD,PIN_NUM);
 5f0:	a2 e3       	ldi	r26, 0x32	; 50
 5f2:	b0 e0       	ldi	r27, 0x00	; 0
 5f4:	e2 e3       	ldi	r30, 0x32	; 50
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	80 81       	ld	r24, Z
 5fa:	48 2f       	mov	r20, r24
 5fc:	8b 81       	ldd	r24, Y+3	; 0x03
 5fe:	28 2f       	mov	r18, r24
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	02 2e       	mov	r0, r18
 608:	02 c0       	rjmp	.+4      	; 0x60e <DIO_Set_Pin_Value+0x224>
 60a:	88 0f       	add	r24, r24
 60c:	99 1f       	adc	r25, r25
 60e:	0a 94       	dec	r0
 610:	e2 f7       	brpl	.-8      	; 0x60a <DIO_Set_Pin_Value+0x220>
 612:	80 95       	com	r24
 614:	84 23       	and	r24, r20
 616:	8c 93       	st	X, r24
            break;
            default:
                break;
            };
        }
        x=1;
 618:	81 e0       	ldi	r24, 0x01	; 1
 61a:	89 83       	std	Y+1, r24	; 0x01
 61c:	01 c0       	rjmp	.+2      	; 0x620 <DIO_Set_Pin_Value+0x236>
    }
    else
    {
        x=0;
 61e:	19 82       	std	Y+1, r1	; 0x01
    }
    return x;
 620:	89 81       	ldd	r24, Y+1	; 0x01
}
 622:	2e 96       	adiw	r28, 0x0e	; 14
 624:	0f b6       	in	r0, 0x3f	; 63
 626:	f8 94       	cli
 628:	de bf       	out	0x3e, r29	; 62
 62a:	0f be       	out	0x3f, r0	; 63
 62c:	cd bf       	out	0x3d, r28	; 61
 62e:	cf 91       	pop	r28
 630:	df 91       	pop	r29
 632:	08 95       	ret

00000634 <DIO_get_Port_Value>:


u8 DIO_get_Port_Value(u8 Port_Num,u8 *Register_reading)
{
 634:	df 93       	push	r29
 636:	cf 93       	push	r28
 638:	00 d0       	rcall	.+0      	; 0x63a <DIO_get_Port_Value+0x6>
 63a:	00 d0       	rcall	.+0      	; 0x63c <DIO_get_Port_Value+0x8>
 63c:	00 d0       	rcall	.+0      	; 0x63e <DIO_get_Port_Value+0xa>
 63e:	cd b7       	in	r28, 0x3d	; 61
 640:	de b7       	in	r29, 0x3e	; 62
 642:	8a 83       	std	Y+2, r24	; 0x02
 644:	7c 83       	std	Y+4, r23	; 0x04
 646:	6b 83       	std	Y+3, r22	; 0x03
    u8 x=2;
 648:	82 e0       	ldi	r24, 0x02	; 2
 64a:	89 83       	std	Y+1, r24	; 0x01
    if (Port_Num>PortD_Num)
 64c:	8a 81       	ldd	r24, Y+2	; 0x02
 64e:	84 30       	cpi	r24, 0x04	; 4
 650:	10 f0       	brcs	.+4      	; 0x656 <DIO_get_Port_Value+0x22>
    {
        x=0;
 652:	19 82       	std	Y+1, r1	; 0x01
 654:	3c c0       	rjmp	.+120    	; 0x6ce <DIO_get_Port_Value+0x9a>
    }
    else 
    {
        x=1;
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	89 83       	std	Y+1, r24	; 0x01
        switch (Port_Num)
 65a:	8a 81       	ldd	r24, Y+2	; 0x02
 65c:	28 2f       	mov	r18, r24
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	3e 83       	std	Y+6, r19	; 0x06
 662:	2d 83       	std	Y+5, r18	; 0x05
 664:	8d 81       	ldd	r24, Y+5	; 0x05
 666:	9e 81       	ldd	r25, Y+6	; 0x06
 668:	81 30       	cpi	r24, 0x01	; 1
 66a:	91 05       	cpc	r25, r1
 66c:	e1 f0       	breq	.+56     	; 0x6a6 <DIO_get_Port_Value+0x72>
 66e:	2d 81       	ldd	r18, Y+5	; 0x05
 670:	3e 81       	ldd	r19, Y+6	; 0x06
 672:	22 30       	cpi	r18, 0x02	; 2
 674:	31 05       	cpc	r19, r1
 676:	2c f4       	brge	.+10     	; 0x682 <DIO_get_Port_Value+0x4e>
 678:	8d 81       	ldd	r24, Y+5	; 0x05
 67a:	9e 81       	ldd	r25, Y+6	; 0x06
 67c:	00 97       	sbiw	r24, 0x00	; 0
 67e:	61 f0       	breq	.+24     	; 0x698 <DIO_get_Port_Value+0x64>
 680:	26 c0       	rjmp	.+76     	; 0x6ce <DIO_get_Port_Value+0x9a>
 682:	2d 81       	ldd	r18, Y+5	; 0x05
 684:	3e 81       	ldd	r19, Y+6	; 0x06
 686:	22 30       	cpi	r18, 0x02	; 2
 688:	31 05       	cpc	r19, r1
 68a:	a1 f0       	breq	.+40     	; 0x6b4 <DIO_get_Port_Value+0x80>
 68c:	8d 81       	ldd	r24, Y+5	; 0x05
 68e:	9e 81       	ldd	r25, Y+6	; 0x06
 690:	83 30       	cpi	r24, 0x03	; 3
 692:	91 05       	cpc	r25, r1
 694:	b1 f0       	breq	.+44     	; 0x6c2 <DIO_get_Port_Value+0x8e>
 696:	1b c0       	rjmp	.+54     	; 0x6ce <DIO_get_Port_Value+0x9a>
        {
            case PortA_Num:
               *Register_reading=PORTA;
 698:	eb e3       	ldi	r30, 0x3B	; 59
 69a:	f0 e0       	ldi	r31, 0x00	; 0
 69c:	80 81       	ld	r24, Z
 69e:	eb 81       	ldd	r30, Y+3	; 0x03
 6a0:	fc 81       	ldd	r31, Y+4	; 0x04
 6a2:	80 83       	st	Z, r24
 6a4:	14 c0       	rjmp	.+40     	; 0x6ce <DIO_get_Port_Value+0x9a>

                break;
            case PortB_Num:
                *Register_reading=PORTB;
 6a6:	e8 e3       	ldi	r30, 0x38	; 56
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	eb 81       	ldd	r30, Y+3	; 0x03
 6ae:	fc 81       	ldd	r31, Y+4	; 0x04
 6b0:	80 83       	st	Z, r24
 6b2:	0d c0       	rjmp	.+26     	; 0x6ce <DIO_get_Port_Value+0x9a>
                break;
            case PortC_Num:
                *Register_reading=PORTC;
 6b4:	e5 e3       	ldi	r30, 0x35	; 53
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	80 81       	ld	r24, Z
 6ba:	eb 81       	ldd	r30, Y+3	; 0x03
 6bc:	fc 81       	ldd	r31, Y+4	; 0x04
 6be:	80 83       	st	Z, r24
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <DIO_get_Port_Value+0x9a>
                break;
            case PortD_Num:
                *Register_reading=PORTD;
 6c2:	e2 e3       	ldi	r30, 0x32	; 50
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	80 81       	ld	r24, Z
 6c8:	eb 81       	ldd	r30, Y+3	; 0x03
 6ca:	fc 81       	ldd	r31, Y+4	; 0x04
 6cc:	80 83       	st	Z, r24
                break;
        };
    }
    return x;
 6ce:	89 81       	ldd	r24, Y+1	; 0x01
}
 6d0:	26 96       	adiw	r28, 0x06	; 6
 6d2:	0f b6       	in	r0, 0x3f	; 63
 6d4:	f8 94       	cli
 6d6:	de bf       	out	0x3e, r29	; 62
 6d8:	0f be       	out	0x3f, r0	; 63
 6da:	cd bf       	out	0x3d, r28	; 61
 6dc:	cf 91       	pop	r28
 6de:	df 91       	pop	r29
 6e0:	08 95       	ret

000006e2 <DIO_get_Pin_Value>:


u8 DIO_get_Pin_Value(u8 Port_Num,u8 PIN_NUM,u8 *Register_reading)
{
 6e2:	df 93       	push	r29
 6e4:	cf 93       	push	r28
 6e6:	cd b7       	in	r28, 0x3d	; 61
 6e8:	de b7       	in	r29, 0x3e	; 62
 6ea:	27 97       	sbiw	r28, 0x07	; 7
 6ec:	0f b6       	in	r0, 0x3f	; 63
 6ee:	f8 94       	cli
 6f0:	de bf       	out	0x3e, r29	; 62
 6f2:	0f be       	out	0x3f, r0	; 63
 6f4:	cd bf       	out	0x3d, r28	; 61
 6f6:	8a 83       	std	Y+2, r24	; 0x02
 6f8:	6b 83       	std	Y+3, r22	; 0x03
 6fa:	5d 83       	std	Y+5, r21	; 0x05
 6fc:	4c 83       	std	Y+4, r20	; 0x04
    u8 x=2;
 6fe:	82 e0       	ldi	r24, 0x02	; 2
 700:	89 83       	std	Y+1, r24	; 0x01
    if (PIN_NUM<8)
 702:	8b 81       	ldd	r24, Y+3	; 0x03
 704:	88 30       	cpi	r24, 0x08	; 8
 706:	08 f0       	brcs	.+2      	; 0x70a <DIO_get_Pin_Value+0x28>
 708:	73 c0       	rjmp	.+230    	; 0x7f0 <DIO_get_Pin_Value+0x10e>
    {

            switch (Port_Num)
 70a:	8a 81       	ldd	r24, Y+2	; 0x02
 70c:	28 2f       	mov	r18, r24
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	3f 83       	std	Y+7, r19	; 0x07
 712:	2e 83       	std	Y+6, r18	; 0x06
 714:	4e 81       	ldd	r20, Y+6	; 0x06
 716:	5f 81       	ldd	r21, Y+7	; 0x07
 718:	41 30       	cpi	r20, 0x01	; 1
 71a:	51 05       	cpc	r21, r1
 71c:	59 f1       	breq	.+86     	; 0x774 <DIO_get_Pin_Value+0x92>
 71e:	8e 81       	ldd	r24, Y+6	; 0x06
 720:	9f 81       	ldd	r25, Y+7	; 0x07
 722:	82 30       	cpi	r24, 0x02	; 2
 724:	91 05       	cpc	r25, r1
 726:	34 f4       	brge	.+12     	; 0x734 <DIO_get_Pin_Value+0x52>
 728:	2e 81       	ldd	r18, Y+6	; 0x06
 72a:	3f 81       	ldd	r19, Y+7	; 0x07
 72c:	21 15       	cp	r18, r1
 72e:	31 05       	cpc	r19, r1
 730:	69 f0       	breq	.+26     	; 0x74c <DIO_get_Pin_Value+0x6a>
 732:	5b c0       	rjmp	.+182    	; 0x7ea <DIO_get_Pin_Value+0x108>
 734:	4e 81       	ldd	r20, Y+6	; 0x06
 736:	5f 81       	ldd	r21, Y+7	; 0x07
 738:	42 30       	cpi	r20, 0x02	; 2
 73a:	51 05       	cpc	r21, r1
 73c:	79 f1       	breq	.+94     	; 0x79c <DIO_get_Pin_Value+0xba>
 73e:	8e 81       	ldd	r24, Y+6	; 0x06
 740:	9f 81       	ldd	r25, Y+7	; 0x07
 742:	83 30       	cpi	r24, 0x03	; 3
 744:	91 05       	cpc	r25, r1
 746:	09 f4       	brne	.+2      	; 0x74a <DIO_get_Pin_Value+0x68>
 748:	3d c0       	rjmp	.+122    	; 0x7c4 <DIO_get_Pin_Value+0xe2>
 74a:	4f c0       	rjmp	.+158    	; 0x7ea <DIO_get_Pin_Value+0x108>
            {
            case PortA_Num:
                *Register_reading=Get_Bit(PINA,PIN_NUM);
 74c:	e7 e2       	ldi	r30, 0x27	; 39
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	80 81       	ld	r24, Z
 752:	28 2f       	mov	r18, r24
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	8b 81       	ldd	r24, Y+3	; 0x03
 758:	88 2f       	mov	r24, r24
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	a9 01       	movw	r20, r18
 75e:	02 c0       	rjmp	.+4      	; 0x764 <DIO_get_Pin_Value+0x82>
 760:	55 95       	asr	r21
 762:	47 95       	ror	r20
 764:	8a 95       	dec	r24
 766:	e2 f7       	brpl	.-8      	; 0x760 <DIO_get_Pin_Value+0x7e>
 768:	ca 01       	movw	r24, r20
 76a:	81 70       	andi	r24, 0x01	; 1
 76c:	ec 81       	ldd	r30, Y+4	; 0x04
 76e:	fd 81       	ldd	r31, Y+5	; 0x05
 770:	80 83       	st	Z, r24
 772:	3b c0       	rjmp	.+118    	; 0x7ea <DIO_get_Pin_Value+0x108>
            break;
            case PortB_Num:
                *Register_reading=Get_Bit(PINB,PIN_NUM);
 774:	e4 e2       	ldi	r30, 0x24	; 36
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	80 81       	ld	r24, Z
 77a:	28 2f       	mov	r18, r24
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	8b 81       	ldd	r24, Y+3	; 0x03
 780:	88 2f       	mov	r24, r24
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	a9 01       	movw	r20, r18
 786:	02 c0       	rjmp	.+4      	; 0x78c <DIO_get_Pin_Value+0xaa>
 788:	55 95       	asr	r21
 78a:	47 95       	ror	r20
 78c:	8a 95       	dec	r24
 78e:	e2 f7       	brpl	.-8      	; 0x788 <DIO_get_Pin_Value+0xa6>
 790:	ca 01       	movw	r24, r20
 792:	81 70       	andi	r24, 0x01	; 1
 794:	ec 81       	ldd	r30, Y+4	; 0x04
 796:	fd 81       	ldd	r31, Y+5	; 0x05
 798:	80 83       	st	Z, r24
 79a:	27 c0       	rjmp	.+78     	; 0x7ea <DIO_get_Pin_Value+0x108>
            break;
            case PortC_Num:
                *Register_reading=Get_Bit(PINC,PIN_NUM);
 79c:	e1 e2       	ldi	r30, 0x21	; 33
 79e:	f0 e0       	ldi	r31, 0x00	; 0
 7a0:	80 81       	ld	r24, Z
 7a2:	28 2f       	mov	r18, r24
 7a4:	30 e0       	ldi	r19, 0x00	; 0
 7a6:	8b 81       	ldd	r24, Y+3	; 0x03
 7a8:	88 2f       	mov	r24, r24
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	a9 01       	movw	r20, r18
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <DIO_get_Pin_Value+0xd2>
 7b0:	55 95       	asr	r21
 7b2:	47 95       	ror	r20
 7b4:	8a 95       	dec	r24
 7b6:	e2 f7       	brpl	.-8      	; 0x7b0 <DIO_get_Pin_Value+0xce>
 7b8:	ca 01       	movw	r24, r20
 7ba:	81 70       	andi	r24, 0x01	; 1
 7bc:	ec 81       	ldd	r30, Y+4	; 0x04
 7be:	fd 81       	ldd	r31, Y+5	; 0x05
 7c0:	80 83       	st	Z, r24
 7c2:	13 c0       	rjmp	.+38     	; 0x7ea <DIO_get_Pin_Value+0x108>
            break;
            case PortD_Num:
                *Register_reading=Get_Bit(PIND,PIN_NUM);
 7c4:	ee e1       	ldi	r30, 0x1E	; 30
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	80 81       	ld	r24, Z
 7ca:	28 2f       	mov	r18, r24
 7cc:	30 e0       	ldi	r19, 0x00	; 0
 7ce:	8b 81       	ldd	r24, Y+3	; 0x03
 7d0:	88 2f       	mov	r24, r24
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	a9 01       	movw	r20, r18
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <DIO_get_Pin_Value+0xfa>
 7d8:	55 95       	asr	r21
 7da:	47 95       	ror	r20
 7dc:	8a 95       	dec	r24
 7de:	e2 f7       	brpl	.-8      	; 0x7d8 <DIO_get_Pin_Value+0xf6>
 7e0:	ca 01       	movw	r24, r20
 7e2:	81 70       	andi	r24, 0x01	; 1
 7e4:	ec 81       	ldd	r30, Y+4	; 0x04
 7e6:	fd 81       	ldd	r31, Y+5	; 0x05
 7e8:	80 83       	st	Z, r24
            break;
            };
        x=1;
 7ea:	81 e0       	ldi	r24, 0x01	; 1
 7ec:	89 83       	std	Y+1, r24	; 0x01
 7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <DIO_get_Pin_Value+0x110>
    }
    else
    {
        x=0;
 7f0:	19 82       	std	Y+1, r1	; 0x01
    }
    return x;
 7f2:	89 81       	ldd	r24, Y+1	; 0x01
}
 7f4:	27 96       	adiw	r28, 0x07	; 7
 7f6:	0f b6       	in	r0, 0x3f	; 63
 7f8:	f8 94       	cli
 7fa:	de bf       	out	0x3e, r29	; 62
 7fc:	0f be       	out	0x3f, r0	; 63
 7fe:	cd bf       	out	0x3d, r28	; 61
 800:	cf 91       	pop	r28
 802:	df 91       	pop	r29
 804:	08 95       	ret

00000806 <UART_Init>:
#include "macros.h"
#include "DIO.h"


void UART_Init(void)
{
 806:	df 93       	push	r29
 808:	cf 93       	push	r28
 80a:	cd b7       	in	r28, 0x3d	; 61
 80c:	de b7       	in	r29, 0x3e	; 62
	Clear_Bit(UCSRB,2);			//8 bit length
 80e:	aa e2       	ldi	r26, 0x2A	; 42
 810:	b0 e0       	ldi	r27, 0x00	; 0
 812:	ea e2       	ldi	r30, 0x2A	; 42
 814:	f0 e0       	ldi	r31, 0x00	; 0
 816:	80 81       	ld	r24, Z
 818:	8b 7f       	andi	r24, 0xFB	; 251
 81a:	8c 93       	st	X, r24
	Set_Bit(UCSRB,3);			//Tx enable
 81c:	aa e2       	ldi	r26, 0x2A	; 42
 81e:	b0 e0       	ldi	r27, 0x00	; 0
 820:	ea e2       	ldi	r30, 0x2A	; 42
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	80 81       	ld	r24, Z
 826:	88 60       	ori	r24, 0x08	; 8
 828:	8c 93       	st	X, r24
	Set_Bit(UCSRB,4);			//Rx enable
 82a:	aa e2       	ldi	r26, 0x2A	; 42
 82c:	b0 e0       	ldi	r27, 0x00	; 0
 82e:	ea e2       	ldi	r30, 0x2A	; 42
 830:	f0 e0       	ldi	r31, 0x00	; 0
 832:	80 81       	ld	r24, Z
 834:	80 61       	ori	r24, 0x10	; 16
 836:	8c 93       	st	X, r24

	//Set_Bit(UCSRC,7);			hf//to write in URRH			//or write this way
	UCSRC=0b10100110;			//URRH(bit 7),Async(bit 6),even parity(bit 5,4),1 bit stop(bit 3),size(bit 2,1),clock(bit 0) <--clock not important
 838:	e0 e4       	ldi	r30, 0x40	; 64
 83a:	f0 e0       	ldi	r31, 0x00	; 0
 83c:	86 ea       	ldi	r24, 0xA6	; 166
 83e:	80 83       	st	Z, r24

	UBRRL=51;					//speed is 9600
 840:	e9 e2       	ldi	r30, 0x29	; 41
 842:	f0 e0       	ldi	r31, 0x00	; 0
 844:	83 e3       	ldi	r24, 0x33	; 51
 846:	80 83       	st	Z, r24
}
 848:	cf 91       	pop	r28
 84a:	df 91       	pop	r29
 84c:	08 95       	ret

0000084e <UART_Recive_Data>:

u8 UART_Recive_Data(void)
{
 84e:	df 93       	push	r29
 850:	cf 93       	push	r28
 852:	cd b7       	in	r28, 0x3d	; 61
 854:	de b7       	in	r29, 0x3e	; 62
	DIO_Set_Pin_direction(PortD_Num,Pin_0,input);
 856:	83 e0       	ldi	r24, 0x03	; 3
 858:	60 e0       	ldi	r22, 0x00	; 0
 85a:	40 e0       	ldi	r20, 0x00	; 0
 85c:	0e 94 83 00 	call	0x106	; 0x106 <DIO_Set_Pin_direction>
	while((Get_Bit(UCSRA,7))==0);
 860:	eb e2       	ldi	r30, 0x2B	; 43
 862:	f0 e0       	ldi	r31, 0x00	; 0
 864:	80 81       	ld	r24, Z
 866:	88 23       	and	r24, r24
 868:	dc f7       	brge	.-10     	; 0x860 <__stack+0x1>
	return UDR;
 86a:	ec e2       	ldi	r30, 0x2C	; 44
 86c:	f0 e0       	ldi	r31, 0x00	; 0
 86e:	80 81       	ld	r24, Z
}
 870:	cf 91       	pop	r28
 872:	df 91       	pop	r29
 874:	08 95       	ret

00000876 <UART_Transmit_Data>:

void UART_Transmit_Data(u8 data)
{
 876:	df 93       	push	r29
 878:	cf 93       	push	r28
 87a:	0f 92       	push	r0
 87c:	cd b7       	in	r28, 0x3d	; 61
 87e:	de b7       	in	r29, 0x3e	; 62
 880:	89 83       	std	Y+1, r24	; 0x01
	DIO_Set_Pin_direction(PortD_Num,Pin_1,output);
 882:	83 e0       	ldi	r24, 0x03	; 3
 884:	61 e0       	ldi	r22, 0x01	; 1
 886:	41 e0       	ldi	r20, 0x01	; 1
 888:	0e 94 83 00 	call	0x106	; 0x106 <DIO_Set_Pin_direction>
	while((Get_Bit(UCSRA,5))==0);
 88c:	eb e2       	ldi	r30, 0x2B	; 43
 88e:	f0 e0       	ldi	r31, 0x00	; 0
 890:	80 81       	ld	r24, Z
 892:	82 95       	swap	r24
 894:	86 95       	lsr	r24
 896:	87 70       	andi	r24, 0x07	; 7
 898:	88 2f       	mov	r24, r24
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	81 70       	andi	r24, 0x01	; 1
 89e:	90 70       	andi	r25, 0x00	; 0
 8a0:	00 97       	sbiw	r24, 0x00	; 0
 8a2:	a1 f3       	breq	.-24     	; 0x88c <UART_Transmit_Data+0x16>
	UDR=data;
 8a4:	ec e2       	ldi	r30, 0x2C	; 44
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	89 81       	ldd	r24, Y+1	; 0x01
 8aa:	80 83       	st	Z, r24

}
 8ac:	0f 90       	pop	r0
 8ae:	cf 91       	pop	r28
 8b0:	df 91       	pop	r29
 8b2:	08 95       	ret

000008b4 <main>:
#include "DIO.h"
#include "UART.h"


int main(void)
{
 8b4:	df 93       	push	r29
 8b6:	cf 93       	push	r28
 8b8:	0f 92       	push	r0
 8ba:	cd b7       	in	r28, 0x3d	; 61
 8bc:	de b7       	in	r29, 0x3e	; 62
	UART_Init();											//with transmitting or reciving
 8be:	0e 94 03 04 	call	0x806	; 0x806 <UART_Init>

	u8 data;												//recive
	DIO_Set_Port_direction(PortA_Num, All_output);
 8c2:	80 e0       	ldi	r24, 0x00	; 0
 8c4:	6f ef       	ldi	r22, 0xFF	; 255
 8c6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_Set_Port_direction>


	while(1)
	{

		data = UART_Recive_Data();
 8ca:	0e 94 27 04 	call	0x84e	; 0x84e <UART_Recive_Data>
 8ce:	89 83       	std	Y+1, r24	; 0x01


		if (data=='a')
 8d0:	89 81       	ldd	r24, Y+1	; 0x01
 8d2:	81 36       	cpi	r24, 0x61	; 97
 8d4:	31 f4       	brne	.+12     	; 0x8e2 <main+0x2e>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_0,high);
 8d6:	80 e0       	ldi	r24, 0x00	; 0
 8d8:	60 e0       	ldi	r22, 0x00	; 0
 8da:	41 e0       	ldi	r20, 0x01	; 1
 8dc:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 8e0:	f4 cf       	rjmp	.-24     	; 0x8ca <main+0x16>
		}
		else if (data== 'b')
 8e2:	89 81       	ldd	r24, Y+1	; 0x01
 8e4:	82 36       	cpi	r24, 0x62	; 98
 8e6:	31 f4       	brne	.+12     	; 0x8f4 <main+0x40>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_0,low);
 8e8:	80 e0       	ldi	r24, 0x00	; 0
 8ea:	60 e0       	ldi	r22, 0x00	; 0
 8ec:	40 e0       	ldi	r20, 0x00	; 0
 8ee:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 8f2:	eb cf       	rjmp	.-42     	; 0x8ca <main+0x16>
		}
		else if(data=='c')
 8f4:	89 81       	ldd	r24, Y+1	; 0x01
 8f6:	83 36       	cpi	r24, 0x63	; 99
 8f8:	31 f4       	brne	.+12     	; 0x906 <main+0x52>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_1,high);
 8fa:	80 e0       	ldi	r24, 0x00	; 0
 8fc:	61 e0       	ldi	r22, 0x01	; 1
 8fe:	41 e0       	ldi	r20, 0x01	; 1
 900:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 904:	e2 cf       	rjmp	.-60     	; 0x8ca <main+0x16>
		}
		else if (data=='d')
 906:	89 81       	ldd	r24, Y+1	; 0x01
 908:	84 36       	cpi	r24, 0x64	; 100
 90a:	31 f4       	brne	.+12     	; 0x918 <main+0x64>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_1,low);
 90c:	80 e0       	ldi	r24, 0x00	; 0
 90e:	61 e0       	ldi	r22, 0x01	; 1
 910:	40 e0       	ldi	r20, 0x00	; 0
 912:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 916:	d9 cf       	rjmp	.-78     	; 0x8ca <main+0x16>
		}
		else if (data=='e')
 918:	89 81       	ldd	r24, Y+1	; 0x01
 91a:	85 36       	cpi	r24, 0x65	; 101
 91c:	31 f4       	brne	.+12     	; 0x92a <main+0x76>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_2,high);
 91e:	80 e0       	ldi	r24, 0x00	; 0
 920:	62 e0       	ldi	r22, 0x02	; 2
 922:	41 e0       	ldi	r20, 0x01	; 1
 924:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 928:	d0 cf       	rjmp	.-96     	; 0x8ca <main+0x16>
		}
		else if (data=='f')
 92a:	89 81       	ldd	r24, Y+1	; 0x01
 92c:	86 36       	cpi	r24, 0x66	; 102
 92e:	31 f4       	brne	.+12     	; 0x93c <main+0x88>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_2,low);
 930:	80 e0       	ldi	r24, 0x00	; 0
 932:	62 e0       	ldi	r22, 0x02	; 2
 934:	40 e0       	ldi	r20, 0x00	; 0
 936:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 93a:	c7 cf       	rjmp	.-114    	; 0x8ca <main+0x16>
		}
		else if(data=='g')
 93c:	89 81       	ldd	r24, Y+1	; 0x01
 93e:	87 36       	cpi	r24, 0x67	; 103
 940:	31 f4       	brne	.+12     	; 0x94e <main+0x9a>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_3,high);
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	63 e0       	ldi	r22, 0x03	; 3
 946:	41 e0       	ldi	r20, 0x01	; 1
 948:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 94c:	be cf       	rjmp	.-132    	; 0x8ca <main+0x16>
		}
		else if (data=='h')
 94e:	89 81       	ldd	r24, Y+1	; 0x01
 950:	88 36       	cpi	r24, 0x68	; 104
 952:	31 f4       	brne	.+12     	; 0x960 <main+0xac>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_3,low);
 954:	80 e0       	ldi	r24, 0x00	; 0
 956:	63 e0       	ldi	r22, 0x03	; 3
 958:	40 e0       	ldi	r20, 0x00	; 0
 95a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 95e:	b5 cf       	rjmp	.-150    	; 0x8ca <main+0x16>
		}
		else if (data=='i')									//quotes to send ASCII code
 960:	89 81       	ldd	r24, Y+1	; 0x01
 962:	89 36       	cpi	r24, 0x69	; 105
 964:	31 f4       	brne	.+12     	; 0x972 <main+0xbe>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_4,high);
 966:	80 e0       	ldi	r24, 0x00	; 0
 968:	64 e0       	ldi	r22, 0x04	; 4
 96a:	41 e0       	ldi	r20, 0x01	; 1
 96c:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 970:	ac cf       	rjmp	.-168    	; 0x8ca <main+0x16>
		}
		else if (data=='j')
 972:	89 81       	ldd	r24, Y+1	; 0x01
 974:	8a 36       	cpi	r24, 0x6A	; 106
 976:	31 f4       	brne	.+12     	; 0x984 <main+0xd0>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_4,low);
 978:	80 e0       	ldi	r24, 0x00	; 0
 97a:	64 e0       	ldi	r22, 0x04	; 4
 97c:	40 e0       	ldi	r20, 0x00	; 0
 97e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 982:	a3 cf       	rjmp	.-186    	; 0x8ca <main+0x16>
		}
		else if(data=='k')
 984:	89 81       	ldd	r24, Y+1	; 0x01
 986:	8b 36       	cpi	r24, 0x6B	; 107
 988:	31 f4       	brne	.+12     	; 0x996 <main+0xe2>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_5,high);
 98a:	80 e0       	ldi	r24, 0x00	; 0
 98c:	65 e0       	ldi	r22, 0x05	; 5
 98e:	41 e0       	ldi	r20, 0x01	; 1
 990:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 994:	9a cf       	rjmp	.-204    	; 0x8ca <main+0x16>
		}
		else if (data=='l')
 996:	89 81       	ldd	r24, Y+1	; 0x01
 998:	8c 36       	cpi	r24, 0x6C	; 108
 99a:	31 f4       	brne	.+12     	; 0x9a8 <main+0xf4>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_5,low);
 99c:	80 e0       	ldi	r24, 0x00	; 0
 99e:	65 e0       	ldi	r22, 0x05	; 5
 9a0:	40 e0       	ldi	r20, 0x00	; 0
 9a2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 9a6:	91 cf       	rjmp	.-222    	; 0x8ca <main+0x16>
		}
		else if (data=='m')									//quotes to send ASCII code
 9a8:	89 81       	ldd	r24, Y+1	; 0x01
 9aa:	8d 36       	cpi	r24, 0x6D	; 109
 9ac:	31 f4       	brne	.+12     	; 0x9ba <main+0x106>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_6,high);
 9ae:	80 e0       	ldi	r24, 0x00	; 0
 9b0:	66 e0       	ldi	r22, 0x06	; 6
 9b2:	41 e0       	ldi	r20, 0x01	; 1
 9b4:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 9b8:	88 cf       	rjmp	.-240    	; 0x8ca <main+0x16>
		}
		else if (data=='n')
 9ba:	89 81       	ldd	r24, Y+1	; 0x01
 9bc:	8e 36       	cpi	r24, 0x6E	; 110
 9be:	31 f4       	brne	.+12     	; 0x9cc <main+0x118>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_6,low);
 9c0:	80 e0       	ldi	r24, 0x00	; 0
 9c2:	66 e0       	ldi	r22, 0x06	; 6
 9c4:	40 e0       	ldi	r20, 0x00	; 0
 9c6:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 9ca:	7f cf       	rjmp	.-258    	; 0x8ca <main+0x16>
		}
		else if(data=='o')
 9cc:	89 81       	ldd	r24, Y+1	; 0x01
 9ce:	8f 36       	cpi	r24, 0x6F	; 111
 9d0:	31 f4       	brne	.+12     	; 0x9de <main+0x12a>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_7,high);
 9d2:	80 e0       	ldi	r24, 0x00	; 0
 9d4:	67 e0       	ldi	r22, 0x07	; 7
 9d6:	41 e0       	ldi	r20, 0x01	; 1
 9d8:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 9dc:	76 cf       	rjmp	.-276    	; 0x8ca <main+0x16>
		}
		else if (data=='p')
 9de:	89 81       	ldd	r24, Y+1	; 0x01
 9e0:	80 37       	cpi	r24, 0x70	; 112
 9e2:	09 f0       	breq	.+2      	; 0x9e6 <main+0x132>
 9e4:	72 cf       	rjmp	.-284    	; 0x8ca <main+0x16>
		{
			DIO_Set_Pin_Value(PortA_Num,Pin_7,low);
 9e6:	80 e0       	ldi	r24, 0x00	; 0
 9e8:	67 e0       	ldi	r22, 0x07	; 7
 9ea:	40 e0       	ldi	r20, 0x00	; 0
 9ec:	0e 94 f5 01 	call	0x3ea	; 0x3ea <DIO_Set_Pin_Value>
 9f0:	6c cf       	rjmp	.-296    	; 0x8ca <main+0x16>

000009f2 <_exit>:
 9f2:	f8 94       	cli

000009f4 <__stop_program>:
 9f4:	ff cf       	rjmp	.-2      	; 0x9f4 <__stop_program>
